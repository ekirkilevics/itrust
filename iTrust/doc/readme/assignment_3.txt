We split the addTelemedicineData.jsp into addTelemedicinePhysiologicData.jsp and addTelemedicineExternalData.jsp .
monitorPatients.jsp and viewAdditionalInfo.jsp both use two tables to show the appropriate data values.
The addRemoteMonitoringData and associated storePatientData methods up as indicated by our UML class diagram (e.g. addRemoteMonitoringGlucoseLevelData, storePatientGlucoseLevelData)

Tests added:
	in /iTrust/httptests/edu/ncsu/csc/itrust/http/TelemonitoringUseCaseTest.java
		testRepresentativeReportWeight
		testUAPReportPatientPedometerReading
		testReportPatientWeightAndPedometer
		testViewWeightAndPedometerReports 

	in  AddRemoteMonitoringDataActionTest - 
	    testAddBadRemoteMonitoringGlucoseLevelData() throws Exception
	    testRepresentativeReportStatus() throws Exception
 	    testAddBadRemoteMonitoringPedometerReadingData() throws Exception
	    testAddBadRemoteMonitoringWeightData() throws Exception
	    testAddRemoteMonitoringExternalDataOnly() throws Exception
	    testAddRemoteMonitoringPedometerReadingDataOnly() throws Exception
	    testAddRemoteMonitoringWeightDataOnly() throws Exception

	in ViewMyRemoteMonitoringListActionTest -
	    public void testGetPatientDataByType() throws Exception